{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshit\\\\Desktop\\\\flutter_dev\\\\Sensors-App\\\\react_backend_web_app\\\\livestream-app\\\\src\\\\SingleStreamPage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport useFetchStream from \"./useFetchStream\";\nimport CustomLineChart from \"./CustomLineChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleStreamPage = () => {\n  _s();\n  const {\n    streamid\n  } = useParams();\n  const {\n    data: dataTest,\n    isPending,\n    error: errorTest\n  } = useFetchStream(streamid);\n  console.log(dataTest);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello World we're at \", streamid, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CustomLineChart, {\n        streamData: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }, this);\n};\n_s(SingleStreamPage, \"QJeGu5N5y2DhmyHmGFyzn8x5KWo=\", false, function () {\n  return [useParams, useFetchStream];\n});\n_c = SingleStreamPage;\nexport default SingleStreamPage;\nvar _c;\n$RefreshReg$(_c, \"SingleStreamPage\");","map":{"version":3,"names":["useParams","useFetchStream","CustomLineChart","jsxDEV","_jsxDEV","SingleStreamPage","_s","streamid","data","dataTest","isPending","error","errorTest","console","log","children","streamData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kshit/Desktop/flutter_dev/Sensors-App/react_backend_web_app/livestream-app/src/SingleStreamPage.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport useFetchStream from \"./useFetchStream\";\r\nimport CustomLineChart from \"./CustomLineChart\";\r\n\r\nconst SingleStreamPage = () => {\r\n  const { streamid } = useParams();\r\n  const {\r\n    data: dataTest,\r\n    isPending,\r\n    error: errorTest,\r\n  } = useFetchStream(streamid);\r\n  console.log(dataTest);\r\n  return (<div>Hello World we're at {streamid}<div><CustomLineChart streamData={data} /></div></div>\r\n  );\r\n};\r\n\r\nexport default SingleStreamPage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAS,CAAC,GAAGP,SAAS,CAAC,CAAC;EAChC,MAAM;IACJQ,IAAI,EAAEC,QAAQ;IACdC,SAAS;IACTC,KAAK,EAAEC;EACT,CAAC,GAAGX,cAAc,CAACM,QAAQ,CAAC;EAC5BM,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EACrB,oBAAQL,OAAA;IAAAW,QAAA,GAAK,uBAAqB,EAACR,QAAQ,eAACH,OAAA;MAAAW,QAAA,eAAKX,OAAA,CAACF,eAAe;QAACc,UAAU,EAAER;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEpG,CAAC;AAACd,EAAA,CAVID,gBAAgB;EAAA,QACCL,SAAS,EAK1BC,cAAc;AAAA;AAAAoB,EAAA,GANdhB,gBAAgB;AAYtB,eAAeA,gBAAgB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}