{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshit\\\\Desktop\\\\flutter_dev\\\\Sensors-App\\\\react_backend_web_app\\\\livestream-app\\\\src\\\\RandomValueComponent.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\n// Import the functions you need from the SDKs you need\n// import { initializeApp } from \"firebase/app\";\n// import { getAnalytics } from \"firebase/analytics\";\n// import { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyB_Wj2j0oEChEN9CnKX6Pi47MQWhleIpCs\",\n//   authDomain: \"flutter-prep-bda5b.firebaseapp.com\",\n//   databaseURL: \"https://flutter-prep-bda5b-default-rtdb.firebaseio.com\",\n//   projectId: \"flutter-prep-bda5b\",\n//   storageBucket: \"flutter-prep-bda5b.appspot.com\",\n//   messagingSenderId: \"917185126462\",\n//   appId: \"1:917185126462:web:3a1fac91a412f96007f16f\",\n//   measurementId: \"G-G2X0P7Q0QE\"\n// };\n\n// // Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const analytics = getAnalytics(app);\n// const db = getFirestore(app)\n// console.log(db)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomValue = () => Math.floor(Math.random() * 100);\nconst RandomValueComponent = () => {\n  _s();\n  const [randomObject, setRandomObject] = useState([{\n    value: getRandomValue()\n  }]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //   setRandomObject({ value: getRandomValue() });\n      setRandomObject(prevValues => {\n        const newValues = [...prevValues, {\n          value: getRandomValue()\n        }];\n        if (newValues.length > 200) {\n          newValues.shift();\n        }\n        return newValues;\n      });\n    }, 50); // Update every second\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Values:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      datasetIdKey: \"id\",\n      data: {\n        labels: randomObject.map((item, index) => index),\n        datasets: [{\n          id: 1,\n          label: \"test_label 1 \",\n          //   data: [5, 6, 7],\n          data: randomObject.map((item, index) => item.value)\n        }\n        // {\n        //   id: 2,\n        //   label: \"test_label 2\",\n        //   data: [3, 2, 1],\n        // },\n        ]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomValueComponent, \"ONSTOw5yuBHNuzji5BQTjnOuFYg=\");\n_c = RandomValueComponent;\nexport default RandomValueComponent;\nvar _c;\n$RefreshReg$(_c, \"RandomValueComponent\");","map":{"version":3,"names":["useEffect","useState","Line","jsxDEV","_jsxDEV","getRandomValue","Math","floor","random","RandomValueComponent","_s","randomObject","setRandomObject","value","intervalId","setInterval","prevValues","newValues","length","shift","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","datasetIdKey","data","labels","map","item","index","datasets","id","label","_c","$RefreshReg$"],"sources":["C:/Users/kshit/Desktop/flutter_dev/Sensors-App/react_backend_web_app/livestream-app/src/RandomValueComponent.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n// Import the functions you need from the SDKs you need\r\n// import { initializeApp } from \"firebase/app\";\r\n// import { getAnalytics } from \"firebase/analytics\";\r\n// import { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyB_Wj2j0oEChEN9CnKX6Pi47MQWhleIpCs\",\r\n//   authDomain: \"flutter-prep-bda5b.firebaseapp.com\",\r\n//   databaseURL: \"https://flutter-prep-bda5b-default-rtdb.firebaseio.com\",\r\n//   projectId: \"flutter-prep-bda5b\",\r\n//   storageBucket: \"flutter-prep-bda5b.appspot.com\",\r\n//   messagingSenderId: \"917185126462\",\r\n//   appId: \"1:917185126462:web:3a1fac91a412f96007f16f\",\r\n//   measurementId: \"G-G2X0P7Q0QE\"\r\n// };\r\n\r\n// // Initialize Firebase\r\n// const app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\n// const db = getFirestore(app)\r\n// console.log(db)\r\n\r\nconst getRandomValue = () => Math.floor(Math.random() * 100);\r\n\r\nconst RandomValueComponent = () => {\r\n  const [randomObject, setRandomObject] = useState([\r\n    { value: getRandomValue() },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      //   setRandomObject({ value: getRandomValue() });\r\n      setRandomObject((prevValues) => {\r\n        const newValues = [...prevValues, { value: getRandomValue() }];\r\n        if (newValues.length > 200) {\r\n          newValues.shift();\r\n        }\r\n        return newValues;\r\n      });\r\n    }, 50); // Update every second\r\n\r\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Random Values:</h1>\r\n      {/* <ul>\r\n            {randomObject.map((item, index) => (\r\n            <li key={index}>{item.value}</li>\r\n            ))}\r\n        </ul> */}\r\n      <Line\r\n        datasetIdKey=\"id\"\r\n        data={{\r\n          labels: randomObject.map((item, index) => index),\r\n          datasets: [\r\n            {\r\n              id: 1,\r\n              label: \"test_label 1 \",\r\n              //   data: [5, 6, 7],\r\n              data: randomObject.map((item, index) => item.value),\r\n            },\r\n            // {\r\n            //   id: 2,\r\n            //   label: \"test_label 2\",\r\n            //   data: [3, 2, 1],\r\n            // },\r\n          ],\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomValueComponent;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,iBAAiB;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAGA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AAE5D,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAC/C;IAAEY,KAAK,EAAER,cAAc,CAAC;EAAE,CAAC,CAC5B,CAAC;EAEFL,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC;MACAH,eAAe,CAAEI,UAAU,IAAK;QAC9B,MAAMC,SAAS,GAAG,CAAC,GAAGD,UAAU,EAAE;UAAEH,KAAK,EAAER,cAAc,CAAC;QAAE,CAAC,CAAC;QAC9D,IAAIY,SAAS,CAACC,MAAM,GAAG,GAAG,EAAE;UAC1BD,SAAS,CAACE,KAAK,CAAC,CAAC;QACnB;QACA,OAAOF,SAAS;MAClB,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAER,OAAO,MAAMG,aAAa,CAACN,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAMvBrB,OAAA,CAACF,IAAI;MACHwB,YAAY,EAAC,IAAI;MACjBC,IAAI,EAAE;QACJC,MAAM,EAAEjB,YAAY,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,CAAC;QAChDC,QAAQ,EAAE,CACR;UACEC,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,eAAe;UACtB;UACAP,IAAI,EAAEhB,YAAY,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACjB,KAAK;QACpD;QACA;QACA;QACA;QACA;QACA;QAAA;MAEJ;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAjDID,oBAAoB;AAAA0B,EAAA,GAApB1B,oBAAoB;AAmD1B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}