{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshit\\\\Desktop\\\\flutter_dev\\\\Sensors-App\\\\react_backend_web_app\\\\livestream-app\\\\src\\\\CustomLineChart.js\";\nimport { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomLineChart = streamData => {\n  //   const [accData, setAccData] = useState(null);\n  // if(streamData.accelerometer !== null)\n  //   if (streamData !== null) {\n  const accData = streamData.streamData[\"accelerometer\"];\n  const accXData = Object.values(accData).map(idx => idx.data.x);\n  const accYData = Object.values(accData).map(idx => idx.data.y);\n  const accZData = Object.values(accData).map(idx => idx.data.z);\n  console.log(accData);\n  //  setAccData(streamData.streamData);\n  //   }\n\n  //   if (accData === null)\n  // return (<div> Loading property</div>);\n  //   const gyroData = streamData.gyroscope;\n  //   console.log(accData);\n  //   console.log(streamData.accelerometer);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      datasetIdKey: \"id\",\n      data: {\n        labels: accXData.length,\n        datasets: [{\n          id: 1,\n          label: \"test_label 1 \",\n          //   data: [5, 6, 7],\n          data: accXData\n        }\n        // {\n        //   id: 2,\n        //   label: \"test_label 2\",\n        //   data: [3, 2, 1],\n        // },\n        ]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomLineChart;\nexport default CustomLineChart;\nvar _c;\n$RefreshReg$(_c, \"CustomLineChart\");","map":{"version":3,"names":["useState","Line","jsxDEV","_jsxDEV","CustomLineChart","streamData","accData","accXData","Object","values","map","idx","data","x","accYData","y","accZData","z","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","datasetIdKey","labels","length","datasets","id","label","_c","$RefreshReg$"],"sources":["C:/Users/kshit/Desktop/flutter_dev/Sensors-App/react_backend_web_app/livestream-app/src/CustomLineChart.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\n\r\nconst CustomLineChart = (streamData) => {\r\n  //   const [accData, setAccData] = useState(null);\r\n  // if(streamData.accelerometer !== null)\r\n  //   if (streamData !== null) {\r\n  const accData = streamData.streamData[\"accelerometer\"];\r\n  const accXData = Object.values(accData).map((idx) => idx.data.x);\r\n  const accYData = Object.values(accData).map((idx) => idx.data.y);\r\n  const accZData = Object.values(accData).map((idx) => idx.data.z);\r\n  console.log(accData);\r\n  //  setAccData(streamData.streamData);\r\n  //   }\r\n\r\n  //   if (accData === null)\r\n  // return (<div> Loading property</div>);\r\n  //   const gyroData = streamData.gyroscope;\r\n  //   console.log(accData);\r\n  //   console.log(streamData.accelerometer);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hello World</h2>\r\n      {/* <pre>\r\n        {accData &&\r\n          JSON.stringify(\r\n            Object.values(accData).map((idx) => idx.data.x),\r\n            null,\r\n            2\r\n          )}\r\n      </pre> */}\r\n      <Line\r\n        datasetIdKey=\"id\"\r\n        data={{\r\n          labels: accXData.length,\r\n          datasets: [\r\n            {\r\n              id: 1,\r\n              label: \"test_label 1 \",\r\n              //   data: [5, 6, 7],\r\n              data: accXData,\r\n            },\r\n            // {\r\n            //   id: 2,\r\n            //   label: \"test_label 2\",\r\n            //   data: [3, 2, 1],\r\n            // },\r\n          ],\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomLineChart;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,eAAe,GAAIC,UAAU,IAAK;EACtC;EACA;EACA;EACA,MAAMC,OAAO,GAAGD,UAAU,CAACA,UAAU,CAAC,eAAe,CAAC;EACtD,MAAME,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAACH,OAAO,CAAC,CAACI,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAACC,CAAC,CAAC;EAChE,MAAMC,QAAQ,GAAGN,MAAM,CAACC,MAAM,CAACH,OAAO,CAAC,CAACI,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAACG,CAAC,CAAC;EAChE,MAAMC,QAAQ,GAAGR,MAAM,CAACC,MAAM,CAACH,OAAO,CAAC,CAACI,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAACK,CAAC,CAAC;EAChEC,OAAO,CAACC,GAAG,CAACb,OAAO,CAAC;EACpB;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACEH,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eASpBrB,OAAA,CAACF,IAAI;MACHwB,YAAY,EAAC,IAAI;MACjBb,IAAI,EAAE;QACJc,MAAM,EAAEnB,QAAQ,CAACoB,MAAM;QACvBC,QAAQ,EAAE,CACR;UACEC,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,eAAe;UACtB;UACAlB,IAAI,EAAEL;QACR;QACA;QACA;QACA;QACA;QACA;QAAA;MAEJ;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACO,EAAA,GAlDI3B,eAAe;AAoDrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}