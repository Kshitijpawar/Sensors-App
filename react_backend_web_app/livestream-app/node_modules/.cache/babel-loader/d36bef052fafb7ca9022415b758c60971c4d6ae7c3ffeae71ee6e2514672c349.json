{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshit\\\\Desktop\\\\flutter_dev\\\\Sensors-App\\\\react_backend_web_app\\\\livestream-app\\\\src\\\\RandomValueComponent.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomValue = () => Math.floor(Math.random() * 100);\nconst RandomValueComponent = () => {\n  _s();\n  const [randomObject, setRandomObject] = useState([{\n    value: getRandomValue()\n  }]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //   setRandomObject({ value: getRandomValue() });\n      setRandomObject(prevValues => [...prevValues, {\n        value: getRandomValue()\n      }]);\n    }, 3000); // Update every second\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Values:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: randomObject.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      datasetIdKey: \"id\",\n      data: {\n        //   labels: [\"Jun\", \"Jul\", \"Aug\"],\n        datasets: [{\n          id: 1,\n          label: \"test_label 1 \",\n          //   data: [5, 6, 7],\n          data: randomObject.map(data => data.value)\n        }\n        // {\n        //   id: 2,\n        //   label: \"test_label 2\",\n        //   data: [3, 2, 1],\n        // },\n        ]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomValueComponent, \"ONSTOw5yuBHNuzji5BQTjnOuFYg=\");\n_c = RandomValueComponent;\nexport default RandomValueComponent;\nvar _c;\n$RefreshReg$(_c, \"RandomValueComponent\");","map":{"version":3,"names":["useEffect","useState","Line","jsxDEV","_jsxDEV","getRandomValue","Math","floor","random","RandomValueComponent","_s","randomObject","setRandomObject","value","intervalId","setInterval","prevValues","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","datasetIdKey","data","datasets","id","label","_c","$RefreshReg$"],"sources":["C:/Users/kshit/Desktop/flutter_dev/Sensors-App/react_backend_web_app/livestream-app/src/RandomValueComponent.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst getRandomValue = () => Math.floor(Math.random() * 100);\r\n\r\nconst RandomValueComponent = () => {\r\n  const [randomObject, setRandomObject] = useState([\r\n    { value: getRandomValue() },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      //   setRandomObject({ value: getRandomValue() });\r\n      setRandomObject((prevValues) => [\r\n        ...prevValues,\r\n        { value: getRandomValue() },\r\n      ]);\r\n    }, 3000); // Update every second\r\n\r\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Random Values:</h1>\r\n      <ul>\r\n        {randomObject.map((item, index) => (\r\n          <li key={index}>{item.value}</li>\r\n        ))}\r\n      </ul>\r\n      <Line\r\n        datasetIdKey=\"id\"\r\n        data={{\r\n        //   labels: [\"Jun\", \"Jul\", \"Aug\"],\r\n          datasets: [\r\n            {\r\n              id: 1,\r\n              label: \"test_label 1 \",\r\n            //   data: [5, 6, 7],\r\n                data: randomObject.map((data) => data.value),\r\n        },\r\n            // {\r\n            //   id: 2,\r\n            //   label: \"test_label 2\",\r\n            //   data: [3, 2, 1],\r\n            // },\r\n          ],\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomValueComponent;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AAE5D,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAC/C;IAAEY,KAAK,EAAER,cAAc,CAAC;EAAE,CAAC,CAC5B,CAAC;EAEFL,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC;MACAH,eAAe,CAAEI,UAAU,IAAK,CAC9B,GAAGA,UAAU,EACb;QAAEH,KAAK,EAAER,cAAc,CAAC;MAAE,CAAC,CAC5B,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMY,aAAa,CAACH,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA;MAAAc,QAAA,EACGP,YAAY,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5BrB,OAAA;QAAAc,QAAA,EAAiBM,IAAI,CAACX;MAAK,GAAlBY,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLlB,OAAA,CAACF,IAAI;MACHwB,YAAY,EAAC,IAAI;MACjBC,IAAI,EAAE;QACN;QACEC,QAAQ,EAAE,CACR;UACEC,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,eAAe;UACxB;UACIH,IAAI,EAAEhB,YAAY,CAACY,GAAG,CAAEI,IAAI,IAAKA,IAAI,CAACd,KAAK;QACnD;QACI;QACA;QACA;QACA;QACA;QAAA;MAEJ;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CA9CID,oBAAoB;AAAAsB,EAAA,GAApBtB,oBAAoB;AAgD1B,eAAeA,oBAAoB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}