{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshit\\\\Desktop\\\\flutter_dev\\\\Sensors-App\\\\react_backend_web_app\\\\livestream-app\\\\src\\\\CustomLineChart.js\";\nimport { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomLineChart = streamData => {\n  // const [accData, setAccData] = useState(streamData.acclerometer);\n  // if(streamData.accelerometer !== null)\n  var accData = null;\n  if (streamData !== null) {\n    accData = streamData.streamData.accelerometer;\n  }\n  if (accData === null) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n  //   const gyroData = streamData.gyroscope;\n  //   console.log(accData);\n  //   console.log(streamData.accelerometer);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: accData && JSON.stringify(Object.values(accData), null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomLineChart;\nexport default CustomLineChart;\nvar _c;\n$RefreshReg$(_c, \"CustomLineChart\");","map":{"version":3,"names":["useState","Line","jsxDEV","_jsxDEV","CustomLineChart","streamData","accData","accelerometer","fileName","_jsxFileName","lineNumber","columnNumber","children","JSON","stringify","Object","values","_c","$RefreshReg$"],"sources":["C:/Users/kshit/Desktop/flutter_dev/Sensors-App/react_backend_web_app/livestream-app/src/CustomLineChart.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst CustomLineChart = (streamData) => {\r\n  // const [accData, setAccData] = useState(streamData.acclerometer);\r\n  // if(streamData.accelerometer !== null)\r\n    var accData = null;\r\n  if (streamData !== null) {\r\n     accData = streamData.streamData.accelerometer;\r\n  }\r\n\r\n  if (accData === null)\r\n    return (<div/>)\r\n  //   const gyroData = streamData.gyroscope;\r\n  //   console.log(accData);\r\n  //   console.log(streamData.accelerometer);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hello World</h2>\r\n      <pre>{accData && JSON.stringify(Object.values(accData), null, 2)}</pre>\r\n      {/* <Line\r\n        datasetIdKey=\"id\"\r\n        data={{\r\n          labels: accData.map((item, index) => index),\r\n          datasets: [\r\n            {\r\n              id: 1,\r\n              label: \"test_label 1 \",\r\n              //   data: [5, 6, 7],\r\n              data: accData,\r\n            },\r\n            // {\r\n            //   id: 2,\r\n            //   label: \"test_label 2\",\r\n            //   data: [3, 2, 1],\r\n            // },\r\n          ],\r\n        }}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomLineChart;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAIC,UAAU,IAAK;EACtC;EACA;EACE,IAAIC,OAAO,GAAG,IAAI;EACpB,IAAID,UAAU,KAAK,IAAI,EAAE;IACtBC,OAAO,GAAGD,UAAU,CAACA,UAAU,CAACE,aAAa;EAChD;EAEA,IAAID,OAAO,KAAK,IAAI,EAClB,oBAAQH,OAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAChB;EACA;EACA;;EAEA,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBR,OAAA;MAAAS,QAAA,EAAMN,OAAO,IAAIO,IAAI,CAACC,SAAS,CAACC,MAAM,CAACC,MAAM,CAACV,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAoBpE,CAAC;AAEV,CAAC;AAACM,EAAA,GAvCIb,eAAe;AAyCrB,eAAeA,eAAe;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}