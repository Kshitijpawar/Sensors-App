{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshit\\\\Desktop\\\\flutter_dev\\\\Sensors-App\\\\react_backend_web_app\\\\livestream-app\\\\src\\\\RandomValueComponent.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomValue = () => Math.floor(Math.random() * 100);\nconst RandomValueComponent = () => {\n  _s();\n  const [randomObject, setRandomObject] = useState([{\n    value: getRandomValue()\n  }]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //   setRandomObject({ value: getRandomValue() });\n      setRandomObject(prevValues => [...prevValues]);\n    }, 3000); // Update every second\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Random Value: \", randomObject.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomValueComponent, \"EZWpvPoxeK9ZCUl+X1OpJsGCtSo=\");\n_c = RandomValueComponent;\nexport default RandomValueComponent;\nvar _c;\n$RefreshReg$(_c, \"RandomValueComponent\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","getRandomValue","Math","floor","random","RandomValueComponent","_s","randomObject","setRandomObject","value","intervalId","setInterval","prevValues","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kshit/Desktop/flutter_dev/Sensors-App/react_backend_web_app/livestream-app/src/RandomValueComponent.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst getRandomValue = () => Math.floor(Math.random() * 100);\r\n\r\nconst RandomValueComponent = () => {\r\n  const [randomObject, setRandomObject] = useState([{ value: getRandomValue() }]);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n    //   setRandomObject({ value: getRandomValue() });\r\n    setRandomObject((prevValues) => [...prevValues, ])\r\n    }, 3000); // Update every second\r\n\r\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Random Value: {randomObject.value}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomValueComponent;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AAE5D,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC;IAAEW,KAAK,EAAER,cAAc,CAAC;EAAE,CAAC,CAAC,CAAC;EAE/EJ,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,WAAW,CAAC,MAAM;MACrC;MACAH,eAAe,CAAEI,UAAU,IAAK,CAAC,GAAGA,UAAU,CAAG,CAAC;IAClD,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAAc,QAAA,GAAI,gBAAc,EAACP,YAAY,CAACE,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAjBID,oBAAoB;AAAAc,EAAA,GAApBd,oBAAoB;AAmB1B,eAAeA,oBAAoB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}